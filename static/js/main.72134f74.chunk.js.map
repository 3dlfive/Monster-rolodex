{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monsters","id","name","email","CardList","map","monster","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchFiled","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAEaA,EAAO,SAAAC,GAClB,OACE,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,SAASC,GAAzC,4BACtB,mCAAML,EAAMI,SAASE,KAArB,OACA,4BAAIN,EAAMI,SAASG,YCFVC,G,MAAW,SAAAR,GACpB,OAAS,sBAAMC,UAAY,YAAlB,cACHD,EAAMI,SAASK,KAAI,SAACC,GAAD,OAAY,cAAC,EAAD,CAAuBN,SAAUM,GAAtBA,EAAQL,OAD/C,SCFAM,G,MAAW,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACpB,uBACAZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCiCCG,G,wDAlCb,aAAc,IAAD,8BACX,gBAYFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAZtC,EAAKC,MAAQ,CAAClB,SAAS,GACrBe,YAAY,IAHH,E,qDAOb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKT,SAAS,CAACd,SAASuB,S,oBAOvC,WACE,MAAkCC,KAAKN,MAA/BlB,EAAR,EAAQA,SAAUe,EAAlB,EAAkBA,YACZU,EAAmBzB,EAAS0B,QAAO,SAAA1B,GAAQ,OAC/CA,EAASE,KAAKyB,cAAcC,SAASb,EAAYY,kBAEnD,OAAU,sBAAK9B,UAAU,MAAf,UACR,qDACA,cAAC,EAAD,CACAW,YAAY,SACZC,aAAce,KAAKf,eAEnB,cAAC,EAAD,CAAUT,SAAUyB,W,GA7BRI,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.72134f74.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css'\r\nexport const Card = props => {\r\n  return (\r\n    <div className='card-container'>\r\n    <img alt=\"monster\" src={`https://robohash.org/${props.monsters.id}?set=set2&size=180x180`}/>\r\n    <h2> {props.monsters.name} < /h2>\r\n    <p>{props.monsters.email}</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\nimport './card-list.style.css'\r\n\r\n\r\nexport const CardList = props => {\r\n    return ( < div className = 'card-list' > {\r\n          props.monsters.map((monster) =><Card key={monster.id} monsters={monster}/>)\r\n          } < /div>)\r\n        }\r\n","import React from 'react';\r\n\r\nimport './search-box.style.css'\r\n\r\nexport const SearchBox =({placeholder, handleChange})=>(\r\n    <input \r\n    className='search' \r\n    type='search' \r\n    placeholder={placeholder} \r\n    onChange={handleChange}\r\n  />\r\n)","import React, {Component} from 'react';\r\nimport { CardList } from './components/card-list/card-list.component.jsx'\r\nimport { SearchBox } from './components/search-box/search-box.component.jsx'\r\n\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component{\r\n  constructor(){\r\n    super();\r\n    this.state = {monsters:[],\r\n      searchFiled:''\r\n    };\r\n\r\n  }\r\n  componentDidMount(){\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response=>response.json())\r\n    .then(users=>this.setState({monsters:users}))\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ searchFiled: e.target.value })\r\n  }\r\n\r\n  render(){\r\n    const { monsters, searchFiled } = this.state;\r\n    const filteredMonsters = monsters.filter(monsters =>\r\n      monsters.name.toLowerCase().includes(searchFiled.toLowerCase())\r\n      );\r\n    return  ( <div className='App'>\r\n      <h1>Monsters search App</h1>\r\n      <SearchBox\r\n      placeholder='search'\r\n      handleChange={this.handleChange}\r\n      />\r\n      <CardList monsters={filteredMonsters}/>\r\n    </div>)\r\n\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}